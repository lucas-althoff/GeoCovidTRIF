# -*- coding: utf-8 -*-
"""ExtratorDeTabelas.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1iCwvhdy1JDwm47jfzabMZqEorBU8QTyq

# Extrator de Tabelas

**Caderno de código** criado para automatizar a extração de indicadores de saúde de bases (estruturadas e não estruturadas) disponíveis na internet. Este código está desenvolvido na linguagem python e utiliza um pacote opensource chamado `pdfpumbler`.

Criador: Lucas Althoff

Local/Data: Brasília, 2021

---

## Instalar e importar pacotes
"""

!pip install pdfplumber
import pdfplumber
import os
import pandas as pd
import matplotlib.pyplot as plt

"""Carregar pdf da url estática para caderno de código"""

# Commented out IPython magic to ensure Python compatibility.
# url_pdf = https://extranet.who.int/pqweb/sites/default/files/documents/Status_COVID_VAX_07April2021.pdf
# %%capture
# !wget -nc 'https://extranet.who.int/pqweb/sites/default/files/documents/Status_COVID_VAX_07April2021.pdf'
# 
# rel = pdfplumber.open('/content/Status_COVID_VAX_07April2021.pdf')

pag = 0 #Página do relatório que contém tabela (começa em zero)

p0 = rel.pages[pag]

#Parâmetros para leitura automática de tabela
tab = p0.extract_table(table_settings={
    "vertical_strategy": "lines", 
    "horizontal_strategy": "lines",
    "explicit_vertical_lines": [],
    "explicit_horizontal_lines": [],
    "snap_tolerance": 3,
    "join_tolerance": 3,
    "edge_min_length": 3,
    "min_words_vertical": 3,
    "min_words_horizontal": 1,
    "keep_blank_chars": False,
    "text_tolerance": 3,
    "text_x_tolerance": None,
    "text_y_tolerance": None,
    "intersection_tolerance": 3,
    "intersection_x_tolerance": None,
    "intersection_y_tolerance": None,})
#Visualizar linhas da tabela
for table in tab:
    for row in table:
        print(row)

# Caso haja mais de uma tabela e seja necessário cortar a pàgina.
cropped = p0.crop((0, 0, p0.width, 0.95*float(p0.height)))
tables = cropped.extract_tables(table_settings={"vertical_strategy": "lines", "horizontal_strategy": "lines"})

#Visualizar linhas da tabela
for table in tables:
    for row in table:
        print(row)

# Número de linhas na tabela dentro de uma página
lin_num = int(tab[-1][0][:-1])

# Header da tabela
head = tab[0][:]
head

"""## Tranformar tabela em formato de Lista para Dataframe"""

df = pd.DataFrame(tab[1:],columns=head)
df.head()

"""## Transformar Dataframe em planilha CSV"""

dir = '/content/resultados'
path = os.path.join(dir,'tabela.csv')

if not os.path.exists(dir):
    os.makedirs(dir)

df.to_csv(path)

"""## Identificar gráficos em tabelas"""

len(p0.curves)

p0.curves[0]

im = p0.to_image()
im.draw_lines(report.curves, stroke="red", stroke_width=2)